# Dockerfile
FROM python:3.9-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Expose port
EXPOSE 8000

# Start application
CMD ["uvicorn", "backend.api.main:app", "--host", "0.0.0.0", "--port", "8000"]

# docker-compose.yml
version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/sage_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    networks:
      - sage-network

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=sage_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sage-network

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    networks:
      - sage-network

  celery_worker:
    build: .
    command: celery -A backend.api.worker worker --loglevel=info
    depends_on:
      - redis
      - db
    networks:
      - sage-network

volumes:
  postgres_data:
  redis_data:

networks:
  sage-network:
    driver: bridge

# kubernetes/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sage-api
  labels:
    app: sage-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sage-api
  template:
    metadata:
      labels:
        app: sage-api
    spec:
      containers:
      - name: sage-api
        image: sage-api:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: sage-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: sage-secrets
              key: redis-url
        resources:
          limits:
            cpu: "1"
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20

# kubernetes/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sage-api-service
spec:
  selector:
    app: sage-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: LoadBalancer
